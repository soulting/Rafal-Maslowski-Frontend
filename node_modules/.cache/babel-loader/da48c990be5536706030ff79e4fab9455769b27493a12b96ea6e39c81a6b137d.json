{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post-selector\"\n};\nconst _hoisted_2 = {\n  class: \"selector-container\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"selector-dropdown-lable\"\n};\nconst _hoisted_5 = {\n  class: \"dropdown-lable\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"dropdown-select-box\"\n};\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.categories, (item, index) => {\n    return _createElementVNode(\"button\", {\n      key: index,\n      class: \"selector\",\n      onClick: $event => $setup.selectCategory(item),\n      style: _normalizeStyle({\n        color: item === $setup.selectedCategory ? 'rgb(67, 149, 209)' : '#2c3e50'\n      })\n    }, _toDisplayString(item), 13 /* TEXT, STYLE, PROPS */, _hoisted_3);\n  }), 64 /* STABLE_FRAGMENT */))]), _createElementVNode(\"div\", {\n    ref: \"target\",\n    class: \"selector-container-dropdown\",\n    style: _normalizeStyle({\n      backgroundColor: $setup.showBox ? 'rgb(235, 235, 235)' : 'white'\n    }),\n    onClick: $setup.changeBox\n  }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", _hoisted_5, _toDisplayString($setup.selectedCategory), 1 /* TEXT */)]), $setup.showBox ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filterCategories, (item, index) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: index,\n      class: \"selector\",\n      onClick: $event => $setup.selectCategory(item)\n    }, _toDisplayString(item), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","categories","item","index","onClick","$event","selectCategory","style","_normalizeStyle","selectedCategory","_hoisted_3","ref","backgroundColor","showBox","changeBox","_hoisted_4","_hoisted_5","_toDisplayString","_hoisted_6","filterCategories","_hoisted_7","_createCommentVNode"],"sources":["/home/andrzej/01_Programing/Rafal-Maslowski-Frontend/src/views/BlogViewElements/PostSelector.vue"],"sourcesContent":["<template>\n  <section class=\"post-selector\">\n    <div class=\"selector-container\">\n      <button\n        v-for=\"(item, index) in categories\"\n        :key=\"index\"\n        class=\"selector\"\n        @click=\"selectCategory(item)\"\n        :style=\"{\n          color: item === selectedCategory ? 'rgb(67, 149, 209)' : '#2c3e50',\n        }\"\n      >\n        {{ item }}\n      </button>\n    </div>\n    <div\n      ref=\"target\"\n      class=\"selector-container-dropdown\"\n      :style=\"{ backgroundColor: showBox ? 'rgb(235, 235, 235)' : 'white' }\"\n      @click=\"changeBox\"\n    >\n      <div class=\"selector-dropdown-lable\">\n        <p class=\"dropdown-lable\">{{ selectedCategory }}</p>\n      </div>\n\n      <div v-if=\"showBox\" class=\"dropdown-select-box\">\n        <button\n          v-for=\"(item, index) in filterCategories\"\n          :key=\"index\"\n          class=\"selector\"\n          @click=\"selectCategory(item)\"\n        >\n          {{ item }}\n        </button>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport { ref, computed } from \"vue\";\nimport { onClickOutside } from \"@vueuse/core\";\n\nconst emit = defineEmits([\"changeCategory\"]);\n\n// Refs\nconst target = ref(null);\nconst showBox = ref(false);\nconst selectedCategory = ref(\"WSZYSTKIE WPISY\");\n\n// Categories\nconst categories = [\n  \"WSZYSTKIE WPISY\",\n  \"UBEZPIECZENIA\",\n  \"FINANSE\",\n  \"KREDYTY HIPOTECZNE\",\n];\n\n// Computed Property\nconst filterCategories = computed(() => {\n  return categories.filter((element) => element !== selectedCategory.value);\n});\n\n// Click Outside\nonClickOutside(target, () => {\n  showBox.value = false;\n});\n\n// Methods\nconst changeBox = () => {\n  showBox.value = !showBox.value;\n};\n\nconst selectCategory = (category) => {\n  selectedCategory.value = category;\n  emit(\"changeCategory\", selectedCategory.value);\n};\n</script>\n\n<style scoped>\n/* Main container */\n.post-selector {\n  height: 70px;\n  background-color: white;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 0 0 0 15px;\n  box-sizing: border-box;\n}\n\n/* Dropdown container */\n.selector-container-dropdown {\n  position: relative;\n  font-size: 16px;\n  height: 50px;\n  margin: 0;\n  cursor: pointer;\n  user-select: none;\n  background-color: rgb(235, 235, 235);\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n}\n\n/* Label within dropdown */\n.selector-dropdown-lable {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: left; /* Align items to the left */\n  width: 200px;\n  margin: 0;\n  padding: 0 15px;\n}\n\n/* Image in dropdown label */\n.selector-dropdown-lable img {\n  height: 25px;\n}\n\n/* Dropdown label text */\n.dropdown-lable {\n  height: 30px;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* Dropdown select box */\n.dropdown-select-box {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  padding: 15px 15px 10px 15px;\n  gap: 15px;\n  width: 200px;\n  z-index: 4;\n  top: 50px;\n  left: 0px;\n  border-radius: 5px;\n  box-shadow: 4px 12px 14px -10px rgba(66, 68, 90, 0.5);\n}\n\n/* Buttons in dropdown select box */\n.dropdown-select-box button {\n  text-align: left;\n  font-size: 16px;\n  font-family: \"Quicksand\", sans-serif;\n  color: #2c3e50;\n}\n\n/* Selector container for category buttons */\n.selector-container {\n  display: none;\n  align-items: center;\n  justify-items: center;\n  gap: 15px;\n}\n\n/* Individual selector buttons */\n.selector {\n  border: none;\n  background-color: white;\n  font-size: 12px;\n  cursor: pointer;\n}\n\n.selector:hover {\n  color: rgb(67, 149, 209);\n}\n\n@media (min-width: 600px) {\n  .post-selector {\n    justify-content: center;\n    padding: 0 0 0 0;\n  }\n\n  .selector {\n    font-size: 16px;\n  }\n\n  .selector-container {\n    display: flex;\n  }\n\n  .selector-container-dropdown {\n    display: none;\n  }\n}\n</style>\n"],"mappings":";;EACWA,KAAK,EAAC;AAAe;;EACvBA,KAAK,EAAC;AAAoB;mBAFnC;;EAqBWA,KAAK,EAAC;AAAyB;;EAC/BA,KAAK,EAAC;AAAgB;;EAtBjCC,GAAA;EAyB0BD,KAAK,EAAC;;mBAzBhC;;uBACEE,mBAAA,CAmCU,WAnCVC,UAmCU,GAlCRC,mBAAA,CAYM,OAZNC,UAYM,I,cAXJH,mBAAA,CAUSI,SAAA,QAbfC,WAAA,CAIgCC,MAAA,CAAAC,UAAU,EAJ1C,CAIgBC,IAAI,EAAEC,KAAK;WADrBP,mBAAA,CAUS;MARNH,GAAG,EAAEU,KAAK;MACXX,KAAK,EAAC,UAAU;MACfY,OAAK,EAAAC,MAAA,IAAEL,MAAA,CAAAM,cAAc,CAACJ,IAAI;MAC1BK,KAAK,EARdC,eAAA;eAQmCN,IAAI,KAAKF,MAAA,CAAAS,gBAAgB;;wBAIjDP,IAAI,gCAZfQ,UAAA;oCAeId,mBAAA,CAoBM;IAnBJe,GAAG,EAAC,QAAQ;IACZnB,KAAK,EAAC,6BAA6B;IAClCe,KAAK,EAlBZC,eAAA;MAAAI,eAAA,EAkBiCZ,MAAA,CAAAa,OAAO;IAAA;IACjCT,OAAK,EAAEJ,MAAA,CAAAc;MAERlB,mBAAA,CAEM,OAFNmB,UAEM,GADJnB,mBAAA,CAAoD,KAApDoB,UAAoD,EAAAC,gBAAA,CAAvBjB,MAAA,CAAAS,gBAAgB,iB,GAGpCT,MAAA,CAAAa,OAAO,I,cAAlBnB,mBAAA,CASM,OATNwB,UASM,I,kBARJxB,mBAAA,CAOSI,SAAA,QAjCjBC,WAAA,CA2BkCC,MAAA,CAAAmB,gBAAgB,EA3BlD,CA2BkBjB,IAAI,EAAEC,KAAK;yBADrBT,mBAAA,CAOS;MALND,GAAG,EAAEU,KAAK;MACXX,KAAK,EAAC,UAAU;MACfY,OAAK,EAAAC,MAAA,IAAEL,MAAA,CAAAM,cAAc,CAACJ,IAAI;wBAExBA,IAAI,wBAhCjBkB,UAAA;sCAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}