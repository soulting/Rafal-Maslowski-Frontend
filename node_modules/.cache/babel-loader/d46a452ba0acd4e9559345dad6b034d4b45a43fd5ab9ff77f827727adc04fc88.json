{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post-selector\"\n};\nconst _hoisted_2 = {\n  class: \"selector-container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"selector\"\n}, \"UBEZPIECZENIA\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"selector\"\n}, \"FINANSE\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"selector\"\n}, \"KREDYTY HIPOTECZNE\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"selector-dropdown-lable\"\n};\nconst _hoisted_7 = {\n  class: \"dropdown-lable\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"dropdown-select-box\"\n};\nconst _hoisted_9 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.categories, (index, item) => {\n    return _createElementVNode(\"button\", {\n      key: index,\n      class: \"selector\"\n    }, _toDisplayString(item), 1 /* TEXT */);\n  }), 64 /* STABLE_FRAGMENT */)), _hoisted_3, _hoisted_4, _hoisted_5]), _createElementVNode(\"div\", {\n    ref: \"target\",\n    class: \"selector-container-dropdown\",\n    style: _normalizeStyle({\n      backgroundColor: $setup.showBox ? 'rgb(235, 235, 235)' : 'white'\n    }),\n    onClick: $setup.changeBox\n  }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", _hoisted_7, _toDisplayString($setup.selectedCategory), 1 /* TEXT */)]), $setup.showBox ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filterCategories, (item, index) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: index,\n      class: \"selector\",\n      onClick: $event => $setup.selectCategory(item)\n    }, _toDisplayString(item), 9 /* TEXT, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$setup","categories","index","item","_hoisted_3","_hoisted_4","_hoisted_5","ref","style","_normalizeStyle","backgroundColor","showBox","onClick","changeBox","_hoisted_6","_hoisted_7","_toDisplayString","selectedCategory","_hoisted_8","filterCategories","$event","selectCategory","_hoisted_9","_createCommentVNode"],"sources":["/home/andrzej/01_Programing/rafal_maslowski_front/src/views/BlogViewElements/PostSelector.vue"],"sourcesContent":["<template>\n  <section class=\"post-selector\">\n    <div class=\"selector-container\">\n      <button v-for=\"(index, item) in categories\" :key=\"index\" class=\"selector\">\n        {{ item }}\n      </button>\n      <button class=\"selector\">UBEZPIECZENIA</button>\n      <button class=\"selector\">FINANSE</button>\n      <button class=\"selector\">KREDYTY HIPOTECZNE</button>\n    </div>\n    <div\n      ref=\"target\"\n      class=\"selector-container-dropdown\"\n      :style=\"{ backgroundColor: showBox ? 'rgb(235, 235, 235)' : 'white' }\"\n      @click=\"changeBox\"\n    >\n      <div class=\"selector-dropdown-lable\">\n        <p class=\"dropdown-lable\">{{ selectedCategory }}</p>\n      </div>\n\n      <div v-if=\"showBox\" class=\"dropdown-select-box\">\n        <button\n          v-for=\"(item, index) in filterCategories\"\n          :key=\"index\"\n          class=\"selector\"\n          @click=\"selectCategory(item)\"\n        >\n          {{ item }}\n        </button>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport { ref, computed } from \"vue\";\nimport { onClickOutside } from \"@vueuse/core\";\n\n// Refs\nconst target = ref(null);\nconst showBox = ref(false);\nconst selectedCategory = ref(\"WSZYSTKIE WPISY\");\n\n// Categories\nconst categories = [\n  \"WSZYSTKIE WPISY\",\n  \"UBEZPIECZENIA\",\n  \"FINANSE\",\n  \"KREDYTY HIPOTECZNE\",\n];\n\n// Computed Property\nconst filterCategories = computed(() => {\n  return categories.filter((element) => element !== selectedCategory.value);\n});\n\n// Click Outside\nonClickOutside(target, () => {\n  showBox.value = false;\n});\n\n// Methods\nconst changeBox = () => {\n  showBox.value = !showBox.value;\n};\n\nconst selectCategory = (category) => {\n  selectedCategory.value = category;\n};\n</script>\n\n<style>\n/* Main container */\n.post-selector {\n  height: 70px;\n  background-color: white;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 0 0 0 15px;\n  box-sizing: border-box;\n}\n\n/* Dropdown container */\n.selector-container-dropdown {\n  position: relative;\n  font-size: 16px;\n  height: 50px;\n  margin: 0;\n  cursor: pointer;\n  user-select: none;\n  background-color: rgb(235, 235, 235);\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n}\n\n/* Label within dropdown */\n.selector-dropdown-lable {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: left; /* Align items to the left */\n  width: 200px;\n  margin: 0;\n  padding: 0 15px;\n}\n\n/* Image in dropdown label */\n.selector-dropdown-lable img {\n  height: 25px;\n}\n\n/* Dropdown label text */\n.dropdown-lable {\n  height: 30px;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* Dropdown select box */\n.dropdown-select-box {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  padding: 15px 15px 10px 15px;\n  gap: 15px;\n  width: 200px;\n  z-index: 4;\n  top: 50px;\n  left: 0px;\n  border-radius: 5px;\n  box-shadow: 4px 12px 14px -10px rgba(66, 68, 90, 0.5);\n}\n\n/* Buttons in dropdown select box */\n.dropdown-select-box button {\n  text-align: left;\n  font-size: 16px;\n  font-family: \"Quicksand\", sans-serif;\n  color: #2c3e50;\n}\n\n/* Selector container for category buttons */\n.selector-container {\n  display: none;\n  align-items: center;\n  justify-items: center;\n  gap: 15px;\n}\n\n/* Individual selector buttons */\n.selector {\n  border: none;\n  background-color: white;\n  font-size: 10px;\n}\n\n@media (min-width: 600px) {\n  .post-selector {\n    justify-content: center;\n    padding: 0 0 0 0;\n  }\n\n  .selector {\n    font-size: 12px;\n  }\n\n  .selector-container {\n    display: flex;\n  }\n\n  .selector-container-dropdown {\n    display: none;\n  }\n}\n</style>\n"],"mappings":";;EACWA,KAAK,EAAC;AAAe;;EACvBA,KAAK,EAAC;AAAoB;gCAI7BC,mBAAA,CAA+C;EAAvCD,KAAK,EAAC;AAAU,GAAC,eAAa;gCACtCC,mBAAA,CAAyC;EAAjCD,KAAK,EAAC;AAAU,GAAC,SAAO;gCAChCC,mBAAA,CAAoD;EAA5CD,KAAK,EAAC;AAAU,GAAC,oBAAkB;;EAQtCA,KAAK,EAAC;AAAyB;;EAC/BA,KAAK,EAAC;AAAgB;;EAjBjCE,GAAA;EAoB0BF,KAAK,EAAC;;mBApBhC;;uBACEG,mBAAA,CA8BU,WA9BVC,UA8BU,GA7BRH,mBAAA,CAOM,OAPNI,UAOM,I,cANJF,mBAAA,CAESG,SAAA,QALfC,WAAA,CAGsCC,MAAA,CAAAC,UAAU,EAHhD,CAGsBC,KAAK,EAAEC,IAAI;WAA3BV,mBAAA,CAES;MAFoCC,GAAG,EAAEQ,KAAK;MAAEV,KAAK,EAAC;wBAC1DW,IAAI;kCAETC,UAA+C,EAC/CC,UAAyC,EACzCC,UAAoD,C,GAEtDb,mBAAA,CAoBM;IAnBJc,GAAG,EAAC,QAAQ;IACZf,KAAK,EAAC,6BAA6B;IAClCgB,KAAK,EAbZC,eAAA;MAAAC,eAAA,EAaiCV,MAAA,CAAAW,OAAO;IAAA;IACjCC,OAAK,EAAEZ,MAAA,CAAAa;MAERpB,mBAAA,CAEM,OAFNqB,UAEM,GADJrB,mBAAA,CAAoD,KAApDsB,UAAoD,EAAAC,gBAAA,CAAvBhB,MAAA,CAAAiB,gBAAgB,iB,GAGpCjB,MAAA,CAAAW,OAAO,I,cAAlBhB,mBAAA,CASM,OATNuB,UASM,I,kBARJvB,mBAAA,CAOSG,SAAA,QA5BjBC,WAAA,CAsBkCC,MAAA,CAAAmB,gBAAgB,EAtBlD,CAsBkBhB,IAAI,EAAED,KAAK;yBADrBP,mBAAA,CAOS;MALND,GAAG,EAAEQ,KAAK;MACXV,KAAK,EAAC,UAAU;MACfoB,OAAK,EAAAQ,MAAA,IAAEpB,MAAA,CAAAqB,cAAc,CAAClB,IAAI;wBAExBA,IAAI,wBA3BjBmB,UAAA;sCAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}