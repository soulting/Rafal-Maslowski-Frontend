{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-675d139c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"posts-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"posts-small-view\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createCommentVNode(\" <div class=\\\"posts-large-view\\\">\\n      <div class=\\\"large-view-collumn\\\">\\n        <div\\n          v-for=\\\"(item, index) in evenPosts\\\"\\n          :key=\\\"index\\\"\\n          class=\\\"post-element\\\"\\n        >\\n          <img :src=\\\"item.image\\\" alt=\\\"post image\\\" />\\n          <h2>{{ item.title }}</h2>\\n          <p>{{ item.description }}</p>\\n        </div>\\n      </div>\\n      <div class=\\\"large-view-collumn\\\">\\n        <div\\n          v-for=\\\"(item, index) in oodPosts\\\"\\n          :key=\\\"index\\\"\\n          class=\\\"post-element\\\"\\n        >\\n          <img :src=\\\"item.image\\\" alt=\\\"post image\\\" />\\n          <h2>{{ item.title }}</h2>\\n          <p>{{ item.description }}</p>\\n        </div>\\n      </div>\\n    </div> \"), !$setup.posts.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredPosts, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"post-element\"\n    }, [_createVNode($setup[\"BlogElement\"], {\n      post: item\n    }, null, 8 /* PROPS */, [\"post\"]), _createCommentVNode(\" {{ item }} \")]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","$setup","posts","isLoading","_hoisted_2","_Fragment","_renderList","filteredPosts","item","index","_createVNode","post"],"sources":["/home/andrzej/01_Programing/rafal_maslowski_front/src/views/BlogViewElements/Posts.vue"],"sourcesContent":["<template>\n  <section class=\"posts-container\">\n    <!-- <div class=\"posts-large-view\">\n      <div class=\"large-view-collumn\">\n        <div\n          v-for=\"(item, index) in evenPosts\"\n          :key=\"index\"\n          class=\"post-element\"\n        >\n          <img :src=\"item.image\" alt=\"post image\" />\n          <h2>{{ item.title }}</h2>\n          <p>{{ item.description }}</p>\n        </div>\n      </div>\n      <div class=\"large-view-collumn\">\n        <div\n          v-for=\"(item, index) in oodPosts\"\n          :key=\"index\"\n          class=\"post-element\"\n        >\n          <img :src=\"item.image\" alt=\"post image\" />\n          <h2>{{ item.title }}</h2>\n          <p>{{ item.description }}</p>\n        </div>\n      </div>\n    </div> -->\n    <div v-if=\"!posts.isLoading\" class=\"posts-small-view\">\n      <div\n        v-for=\"(item, index) in filteredPosts\"\n        :key=\"index\"\n        class=\"post-element\"\n      >\n        <BlogElement :post=\"item\" />\n        <!-- {{ item }} -->\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport { usePosts } from \"@/stores/posts\";\nimport { computed } from \"vue\";\nimport BlogElement from \"@/components/BlogElementCarouselItem.vue\";\n\nconst props = defineProps({\n  category: String,\n});\n\nconst posts = usePosts();\n\nconst filteredPosts = computed(() => {\n  if (props.category === \"WSZYSTKIE WPISY\") {\n    return posts.posts;\n  } else {\n    return posts.posts.filter((element) => element.category === props.category);\n  }\n});\n\nconst evenPosts = computed(() => {\n  if (filteredPosts.value) {\n    return filteredPosts.value.filter((element, index) => index % 2 === 0);\n  } else return null;\n});\n\nconst oodPosts = computed(() => {\n  if (filteredPosts.value) {\n    return filteredPosts.value.filter((element, index) => index % 2 !== 0);\n  } else return null;\n});\n</script>\n\n<style scoped>\n.posts-container {\n  background-color: rgb(248, 248, 248);\n  padding: 20px 0;\n}\n\n.posts-large-view {\n  display: none;\n}\n\n.posts-small-view {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 35px;\n}\n\n.post-element {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 350px;\n  background-color: white;\n  padding-bottom: 15px;\n}\n\n.post-element img {\n  width: 350px;\n  height: auto;\n}\n\n.post-element h2 {\n  width: 325px;\n  text-align: left;\n  padding: 15px 0;\n  border-bottom: solid rgb(150, 150, 150) 0.5px;\n}\n\n.post-element p {\n  width: 325px;\n  text-align: left;\n}\n\n@media (min-width: 450px) {\n  .post-element {\n    width: 400px;\n  }\n\n  .post-element img {\n    width: 400px;\n  }\n\n  .post-element h2 {\n    width: 360px;\n  }\n\n  .post-element p {\n    width: 360px;\n  }\n}\n\n@media (min-width: 768px) {\n  .posts-small-view {\n    display: none;\n  }\n  .posts-large-view {\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    gap: 50px;\n  }\n\n  .large-view-collumn {\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n    align-items: center;\n    justify-content: center;\n  }\n}\n</style>\n"],"mappings":";;;EACWA,KAAK,EAAC;AAAiB;;EADlCC,GAAA;EA0BiCD,KAAK,EAAC;;;uBAzBrCE,mBAAA,CAmCU,WAnCVC,UAmCU,GAlCRC,mBAAA,2tBAuBU,E,CACEC,MAAA,CAAAC,KAAK,CAACC,SAAS,I,cAA3BL,mBAAA,CASM,OATNM,UASM,I,kBARJN,mBAAA,CAOMO,SAAA,QAlCZC,WAAA,CA4BgCL,MAAA,CAAAM,aAAa,EA5B7C,CA4BgBC,IAAI,EAAEC,KAAK;yBADrBX,mBAAA,CAOM;MALHD,GAAG,EAAEY,KAAK;MACXb,KAAK,EAAC;QAENc,YAAA,CAA4BT,MAAA;MAAdU,IAAI,EAAEH;IAAI,mCACxBR,mBAAA,gBAAmB,C;sCAjC3BA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}