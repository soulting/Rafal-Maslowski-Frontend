{"ast":null,"code":"export const activateBlogPost = async postID => {\n  try {\n    const response = await fetch(`http://127.0.0.1:5000/activateBlogPost?id=${postID}`, {\n      method: \"PUT\"\n    });\n\n    // Sprawdzanie, czy odpowiedź jest OK (status 200-299)\n    if (!response.ok) {\n      const errorText = await response.text(); // Odczytanie treści błędu z odpowiedzi\n      console.error(\"Error response:\", errorText);\n      throw new Error(`Couldn't change the post. Status: ${response.status}`);\n    }\n\n    // Próbuj przetworzyć odpowiedź jako JSON\n    try {\n      const data = await response.json();\n      return data; // Zwróć dane odpowiedzi, jeśli są poprawne\n    } catch (jsonError) {\n      console.error(\"Error parsing JSON response:\", jsonError);\n      throw new Error(\"Failed to parse JSON response from the server\");\n    }\n  } catch (error) {\n    // Logowanie błędu\n    console.error(\"Error activating post:\", error);\n    return {\n      error: error.message\n    }; // Zwróć obiekt z komunikatem o błędzie\n  }\n};","map":{"version":3,"names":["activateBlogPost","postID","response","fetch","method","ok","errorText","text","console","error","Error","status","data","json","jsonError","message"],"sources":["/home/andrzej/01_Programing/rafal_maslowski_front/src/composables/activateBlogPost.js"],"sourcesContent":["export const activateBlogPost = async (postID) => {\n  try {\n    const response = await fetch(\n      `http://127.0.0.1:5000/activateBlogPost?id=${postID}`,\n      {\n        method: \"PUT\",\n      }\n    );\n\n    // Sprawdzanie, czy odpowiedź jest OK (status 200-299)\n    if (!response.ok) {\n      const errorText = await response.text(); // Odczytanie treści błędu z odpowiedzi\n      console.error(\"Error response:\", errorText);\n      throw new Error(`Couldn't change the post. Status: ${response.status}`);\n    }\n\n    // Próbuj przetworzyć odpowiedź jako JSON\n    try {\n      const data = await response.json();\n      return data; // Zwróć dane odpowiedzi, jeśli są poprawne\n    } catch (jsonError) {\n      console.error(\"Error parsing JSON response:\", jsonError);\n      throw new Error(\"Failed to parse JSON response from the server\");\n    }\n  } catch (error) {\n    // Logowanie błędu\n    console.error(\"Error activating post:\", error);\n    return { error: error.message }; // Zwróć obiekt z komunikatem o błędzie\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,MAAOC,MAAM,IAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6CAA6CF,MAAM,EAAE,EACrD;MACEG,MAAM,EAAE;IACV,CACF,CAAC;;IAED;IACA,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;MACzCC,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEH,SAAS,CAAC;MAC3C,MAAM,IAAII,KAAK,CAAC,qCAAqCR,QAAQ,CAACS,MAAM,EAAE,CAAC;IACzE;;IAEA;IACA,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI,CAAC,CAAC;IACf,CAAC,CAAC,OAAOE,SAAS,EAAE;MAClBN,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEK,SAAS,CAAC;MACxD,MAAM,IAAIJ,KAAK,CAAC,+CAA+C,CAAC;IAClE;EACF,CAAC,CAAC,OAAOD,KAAK,EAAE;IACd;IACAD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO;MAAEA,KAAK,EAAEA,KAAK,CAACM;IAAQ,CAAC,CAAC,CAAC;EACnC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}