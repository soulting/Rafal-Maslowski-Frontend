{"ast":null,"code":"import { onMounted, ref } from \"vue\";\nexport default {\n  __name: 'Contact',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const showElement = ref(false);\n    onMounted(() => {\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            showElement.value = true;\n          }\n        });\n      });\n      const target = document.getElementById(`contact-element-observe-target`);\n      observer.observe(target);\n      window.addEventListener(\"scroll\", function () {\n        let scrollPosition = window.pageYOffset;\n        document.getElementById(\"parallax\").style.transform = `scale(${1 + (scrollPosition - 2000) * 0.0003})`;\n      });\n    });\n    const __returned__ = {\n      showElement,\n      onMounted,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","showElement","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","value","target","document","getElementById","observe","window","addEventListener","scrollPosition","pageYOffset","style","transform"],"sources":["/home/andrzej/01_Programing/rafal_maslowski_front/src/views/HomeViewElements/Contact.vue"],"sourcesContent":["<template>\n  <section class=\"contact\" id=\"contact-element-observe-target\">\n    <img\n      class=\"ontact-background-image\"\n      src=\"@/assets/backgrounds/bohater.png\"\n      alt=\"contact background image\"\n      id=\"parallax\"\n    />\n\n    <div class=\"contact-details-container\">\n      <h2 id=\"element0\">Skontaktuj się ze mną</h2>\n      <div class=\"input-container\" id=\"element1\">\n        <div class=\"inner_input_container\">\n          <p>Imię</p>\n          <input class=\"name\" type=\"text\" />\n        </div>\n        <div class=\"inner_input_container\" id=\"element2\">\n          <p>Email</p>\n          <input class=\"e-mail\" type=\"email\" />\n        </div>\n      </div>\n      <div class=\"message-container\" id=\"element3\">\n        <p>Wiadomość</p>\n        <textarea class=\"message-field\" cols=\"30\" rows=\"10\"></textarea>\n        <button class=\"send-button\">Wyślij</button>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport { onMounted, ref } from \"vue\";\n\nconst showElement = ref(false);\n\nonMounted(() => {\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        showElement.value = true;\n      }\n    });\n  });\n  const target = document.getElementById(`contact-element-observe-target`);\n  observer.observe(target);\n\n  window.addEventListener(\"scroll\", function () {\n    let scrollPosition = window.pageYOffset;\n\n    document.getElementById(\"parallax\").style.transform = `scale(${\n      1 + (scrollPosition - 2000) * 0.0003\n    })`;\n  });\n});\n</script>\n\n<style scoped>\n.contact {\n  display: flex;\n  flex-direction: column;\n  padding: 50px 25px 0 25px;\n  width: 100vw;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  z-index: 0;\n  overflow: hidden;\n}\n\n.contact:after {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(255, 255, 255, 0.5);\n  z-index: -1;\n}\n\n.ontact-background-image {\n  position: absolute;\n  min-height: 100%;\n  min-width: 100%;\n  z-index: -1;\n  bottom: 0;\n}\n\n.contact-details-container {\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  align-items: center;\n  justify-content: center;\n  padding: 25px;\n  background-color: rgba(255, 255, 255, 0.3);\n}\n\n.input-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n}\n\n.inner_input_container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.inner_input_container p,\n.contact-details-container p {\n  font-size: 20px;\n  margin: 16px auto 6px 16px;\n  text-align: left;\n}\n\n.contact-details-container p {\n  margin: 26px auto 16px 0;\n}\n\n.contact-details-container input {\n  height: 40px;\n  padding-left: 10px;\n  font-size: 16px;\n  border-top: none;\n  border-right: none;\n  border-left: none;\n  border-bottom: solid 1px black;\n  outline: none;\n  width: 100%;\n  /* width: 300px; */\n  box-sizing: border-box;\n  position: relative;\n  z-index: 1;\n  background: transparent;\n  margin-right: auto;\n}\n\n.message-container {\n  width: 100%;\n}\n\n.message-field {\n  padding: 10px;\n  outline: none;\n  font-size: 16px;\n  width: 100%;\n  z-index: 1;\n  background: transparent;\n  box-sizing: border-box;\n}\n\n.message-field::-webkit-resizer {\n  display: none;\n}\n.send-button {\n  font-size: 16px;\n  font-weight: 500;\n  height: 50px;\n  background-color: white;\n  border: solid black 0.5px;\n  border-radius: 25px;\n  padding: 0 15px 0 15px;\n  font-family: \"Quicksand\", sans-serif;\n  font-optical-sizing: auto;\n  text-align: center;\n  color: #2c3e50;\n  transition: all 1s ease;\n  margin-top: 30px;\n  min-width: 150px;\n  z-index: 1;\n  background: transparent;\n}\n\n.send-button:hover {\n  font-size: 18px;\n  background-color: #2c3e50;\n  color: #ffffff;\n}\n\n.contactElement-enter-from,\n.contactElement-leave-to {\n  opacity: 0;\n  transform: translateY(100%);\n}\n\n.contactElement-enter-active,\n.contactElement-leave-active {\n  transition: all 1s ease;\n}\n\n#element0.contactElement-enter-active {\n  transition-delay: 0.35s;\n}\n#element1.contactElement-enter-active {\n  transition-delay: 0.7s;\n}\n#element2.contactElement-enter-active {\n  transition-delay: 1.05s;\n}\n#element2.contactElement-enter-active {\n  transition-delay: 1.4s;\n}\n\n.contactElement-enter-to,\n.contactElement-leave-from {\n  opacity: 1;\n  transform: translateY(0%);\n}\n\n@media (min-width: 768px) {\n  .inner-input-container {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .inner-input-container input {\n  }\n\n  .input-container {\n    flex-direction: row;\n    gap: 50px;\n  }\n\n  .send-button {\n    width: 30px;\n    margin-left: 25px;\n    margin-right: auto;\n  }\n}\n</style>\n"],"mappings":"AA+BA,SAASA,SAAS,EAAEC,GAAG,QAAQ,KAAK;;;;;;;IAEpC,MAAMC,WAAW,GAAGD,GAAG,CAAC,KAAK,CAAC;IAE9BD,SAAS,CAAC,MAAM;MACd,MAAMG,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;QACrDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;UACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;YACxBN,WAAW,CAACO,KAAK,GAAG,IAAI;UAC1B;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,gCAAgC,CAAC;MACxET,QAAQ,CAACU,OAAO,CAACH,MAAM,CAAC;MAExBI,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,YAAY;QAC5C,IAAIC,cAAc,GAAGF,MAAM,CAACG,WAAW;QAEvCN,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACM,KAAK,CAACC,SAAS,GAAG,SACpD,CAAC,GAAG,CAACH,cAAc,GAAG,IAAI,IAAI,MAAM,GACnC;MACL,CAAC,CAAC;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}