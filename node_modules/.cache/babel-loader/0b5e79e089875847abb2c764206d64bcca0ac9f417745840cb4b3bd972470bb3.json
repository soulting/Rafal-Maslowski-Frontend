{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <section v-if=\\\"!posts.posts.isLoading\\\" class=\\\"post-view-post-container\\\">\\n    <h1 class=\\\"title-section\\\">{{ blogPost.title }}</h1>\\n    <p class=\\\"publication-date\\\">\\n      Opublikowano\\n      <span class=\\\"highlight\\\">{{ blogPost.date }}</span> przez\\n      <span class=\\\"highlight\\\">R. Masłowski</span>\\n    </p>\\n    <hr />\\n    <div class=\\\"body-section\\\" v-html=\\\"blogPost.code\\\"></div>\\n    <hr />\\n  </section>\\n  <section class=\\\"post-view-post-container-loader\\\" v-else>\\n    <img src=\\\"@/assets/RM_logo.png\\\" alt=\\\"Loading...\\\" class=\\\"loading-image\\\" />\\n\\n    <div class=\\\"dot-container\\\">\\n      <img class=\\\"dot\\\" id=\\\"first\\\" src=\\\"@/assets/icons/dot.png\\\" alt=\\\"dot\\\" />\\n      <img class=\\\"dot\\\" id=\\\"second\\\" src=\\\"@/assets/icons/dot.png\\\" alt=\\\"dot\\\" />\\n      <img class=\\\"dot\\\" id=\\\"third\\\" src=\\\"@/assets/icons/dot.png\\\" alt=\\\"dot\\\" />\\n    </div>\\n  </section> \"), !$setup.posts.posts.isLoading ? (_openBlock(), _createBlock($setup[\"Contact\"], {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createCommentVNode","$setup","posts","isLoading","_createBlock","key"],"sources":["/home/andrzej/01_Programing/rafal_maslowski_front/src/views/PostView.vue"],"sourcesContent":["<template>\n  <!-- <section v-if=\"!posts.posts.isLoading\" class=\"post-view-post-container\">\n    <h1 class=\"title-section\">{{ blogPost.title }}</h1>\n    <p class=\"publication-date\">\n      Opublikowano\n      <span class=\"highlight\">{{ blogPost.date }}</span> przez\n      <span class=\"highlight\">R. Masłowski</span>\n    </p>\n    <hr />\n    <div class=\"body-section\" v-html=\"blogPost.code\"></div>\n    <hr />\n  </section>\n  <section class=\"post-view-post-container-loader\" v-else>\n    <img src=\"@/assets/RM_logo.png\" alt=\"Loading...\" class=\"loading-image\" />\n\n    <div class=\"dot-container\">\n      <img class=\"dot\" id=\"first\" src=\"@/assets/icons/dot.png\" alt=\"dot\" />\n      <img class=\"dot\" id=\"second\" src=\"@/assets/icons/dot.png\" alt=\"dot\" />\n      <img class=\"dot\" id=\"third\" src=\"@/assets/icons/dot.png\" alt=\"dot\" />\n    </div>\n  </section> -->\n  <Contact v-if=\"!posts.posts.isLoading\" />\n</template>\n\n<script setup>\nimport { getBlogPost } from \"@/composables/getBlogPost\";\nimport router from \"@/router\";\nimport { onMounted, ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport Contact from \"@/views/HomeViewElements/Contact.vue\";\nimport { usePosts } from \"@/stores/posts\";\n\nconst route = useRoute();\nconst posts = usePosts();\n\nconst blogPost = ref(null);\n\nonMounted(async () => {\n  if (posts.isLoading) {\n    await posts.getPosts();\n  }\n\n  blogPost.value = await posts.posts.find(\n    (item) => item.id === Number(route.query.id)\n  );\n\n  console.log(posts.posts);\n  window.scrollTo(0, 0);\n});\n</script>\n\n<style>\n.loading-image {\n  width: 150px; /* Dostosuj rozmiar logo */\n}\n\n.dot-container {\n  display: flex;\n  gap: 30px;\n}\n\n.dot {\n  height: 20px;\n  width: auto;\n}\n\n#first {\n  animation: dot-animation 1.5s infinite;\n  animation-delay: 0.25s;\n}\n\n#second {\n  animation: dot-animation 1.5s infinite;\n  animation-delay: 0.5s;\n}\n\n#third {\n  animation: dot-animation 1.5s infinite;\n  animation-delay: 0.75s;\n}\n\n@keyframes dot-animation {\n  0% {\n    scale: 1;\n  }\n  50% {\n    scale: 1.7;\n  }\n  100% {\n    scale: 1;\n  }\n}\n.post-view-post-container-loader {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 30px;\n}\n\n.highlight {\n  font-weight: bold;\n  white-space: nowrap;\n}\n\n.publication-date {\n  text-align: left;\n}\n\n.post-view-post-container img {\n  max-width: 100%;\n  height: auto;\n}\n\n.post-view-post-container {\n  padding: 100px 20px 20px 20px;\n  box-sizing: border-box;\n  overflow-wrap: break-word;\n}\n\n.post-view-post-container h1 {\n  font-size: 25px;\n}\n\n.post-view-post-container h1,\n.post-view-post-container h2,\n.post-view-post-container h3,\n.post-view-post-container h4,\n.post-view-post-container h5,\n.post-view-post-container h6,\n.post-view-post-container span,\n.post-view-post-container li {\n  text-align: left;\n}\n\n.post-view-post-container p {\n  text-align: justify;\n}\n\n.post-view-post-container hr {\n  border: solid rgb(200, 200, 200) 0.5px;\n  margin: 35px 0;\n}\n\n.post-view-post-container a {\n  text-decoration: none;\n}\n\n@media (min-width: 450px) {\n  .post-view-post-container {\n    padding: 100px 30px 30px 30px;\n  }\n}\n\n@media (min-width: 768px) {\n  .post-view-post-container {\n    padding: 100px 80px 80px 80px;\n  }\n}\n\n@media (min-width: 1000px) {\n  .post-view-post-container {\n    padding: 100px 150px 80px 150px;\n  }\n}\n\n@media (min-width: 1300px) {\n  .post-view-post-container {\n    padding: 100px 200px 80px 200px;\n  }\n}\n</style>\n"],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,mBAAA,+3BAmBc,E,CACEC,MAAA,CAAAC,KAAK,CAACA,KAAK,CAACC,SAAS,I,cAArCC,YAAA,CAAyCH,MAAA;IArB3CI,GAAA;EAAA,MAAAL,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}