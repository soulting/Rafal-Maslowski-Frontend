{"ast":null,"code":"import { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode($setup[\"Title\"], {\n    onVideoLoaded: _cache[0] || (_cache[0] = $event => $setup.videoIsLoaded = true)\n  }), _createVNode($setup[\"Selectors\"], {\n    onChangeCategory: $setup.changeCategory\n  }), $setup.posts.data ? (_openBlock(), _createBlock($setup[\"Posts\"], {\n    key: 0,\n    posts: $setup.posts,\n    category: $setup.category\n  }, null, 8 /* PROPS */, [\"posts\", \"category\"])) : _createCommentVNode(\"v-if\", true), _createVNode($setup[\"Contact\"]), !$setup.posts.data || !$setup.mutables.data || _ctx.showLoader ? (_openBlock(), _createBlock($setup[\"Loader\"], {\n    key: 1\n  })) : _createCommentVNode(\"v-if\", true), _createVNode($setup[\"Footer\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","$setup","onVideoLoaded","_cache","$event","videoIsLoaded","onChangeCategory","changeCategory","posts","data","_createBlock","key","category","_createCommentVNode","mutables","_ctx","showLoader"],"sources":["/home/andrzej/01_Programing/rafal_maslowski_front/src/views/BlogView.vue"],"sourcesContent":["<template>\n  <Title @videoLoaded=\"videoIsLoaded = true\" />\n  <Selectors @changeCategory=\"changeCategory\" />\n  <Posts v-if=\"posts.data\" :posts=\"posts\" :category=\"category\" />\n  <Contact />\n  <Loader v-if=\"!posts.data || !mutables.data || showLoader\" />\n  <Footer />\n</template>\n\n<script setup>\nimport Contact from \"@/views/HomeViewElements/Contact.vue\";\nimport Title from \"@/views/BlogViewElements/Title.vue\";\nimport Selectors from \"@/views/BlogViewElements/PostSelector.vue\";\nimport Posts from \"@/views/BlogViewElements/Posts.vue\";\nimport Loader from \"./SharedElements/Loader.vue\";\nimport Footer from \"./SharedElements/Footer.vue\";\nimport { computed, onMounted, onUnmounted, ref } from \"vue\";\nimport { usePosts } from \"@/stores/posts\";\nimport { useMutables } from \"@/stores/mutables\";\n\nconst posts = usePosts();\nconst mutables = useMutables();\n\nconst category = ref(\"WSZYSTKIE WPISY\");\n\nconst videoIsLoaded = ref(false);\n\nconst changeCategory = (item) => {\n  category.value = item;\n};\n\nonMounted(() => {\n  window.scrollTo(0, 0);\n\n  if (!posts.data) {\n    posts.getPosts();\n  }\n\n  if (!mutables.data) {\n    mutables.getMutables();\n  }\n});\n</script>\n\n<style scoped>\n.loading-image {\n  width: 150px; /* Dostosuj rozmiar logo */\n}\n\n.dot-container {\n  display: flex;\n  gap: 30px;\n}\n\n.dot {\n  height: 20px;\n  width: auto;\n}\n\n#first {\n  animation: dot-animation 1.5s infinite;\n  animation-delay: 0.25s;\n}\n\n#second {\n  animation: dot-animation 1.5s infinite;\n  animation-delay: 0.5s;\n}\n\n#third {\n  animation: dot-animation 1.5s infinite;\n  animation-delay: 0.75s;\n}\n\n@keyframes dot-animation {\n  0% {\n    scale: 1;\n  }\n  50% {\n    scale: 1.7;\n  }\n  100% {\n    scale: 1;\n  }\n}\n.post-view-post-container-loader {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 30px;\n  position: fixed;\n  z-index: 2;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: white;\n}\n</style>\n"],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAA6CC,MAAA;IAArCC,aAAW,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEH,MAAA,CAAAI,aAAa;MAClCL,YAAA,CAA8CC,MAAA;IAAlCK,gBAAc,EAAEL,MAAA,CAAAM;EAAc,IAC7BN,MAAA,CAAAO,KAAK,CAACC,IAAI,I,cAAvBC,YAAA,CAA+DT,MAAA;IAHjEU,GAAA;IAG4BH,KAAK,EAAEP,MAAA,CAAAO,KAAK;IAAGI,QAAQ,EAAEX,MAAA,CAAAW;oDAHrDC,mBAAA,gBAIEb,YAAA,CAAWC,MAAA,c,CACIA,MAAA,CAAAO,KAAK,CAACC,IAAI,KAAKR,MAAA,CAAAa,QAAQ,CAACL,IAAI,IAAIM,IAAA,CAAAC,UAAU,I,cAAzDN,YAAA,CAA6DT,MAAA;IAL/DU,GAAA;EAAA,MAAAE,mBAAA,gBAMEb,YAAA,CAAUC,MAAA,Y","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}